import com.kinglib.*;
import com.social.api.core.model.*;
import com.kinglib.util.json.*;
import com.kinglib.dictionary.*;

import com.kinglib.ui.core.utils.Param;
//public class A0_Jcp{
@class{

public void doGet(Jacper jacper){

		Connection conCert = jacper.getConnection("cert");
		Connection conPlat = jacper.getConnection("plat");

		boolean isLogin = jacper.setSession();
		HttpSession hs = jacper.getSession();
		int login_as = (int)hs.uid;

		String type = jacper.getStr("type");


		String positionArray = DictFactory.getInstance().getDict(conPlat,4011).getJavascriptArray();
		String roleNameArray = DictFactory.getInstance().getDict(conPlat,4145).getJavascriptArray();

		try{
			String dept_id=jacper.getStr("dept_id");
			
			JSONObject roleJSON = new JSONObject("{}");

			if(type.equals("new")){
				roleJSON.put("positionArray",positionArray);
				roleJSON.put("roleNameArray",roleNameArray);
				<?[?>roleJSON.toString()<?]?>;
			}else{
				String role_id=jacper.getStr("roleId");

				String[] rs = conCert.getRow("select a.roles,a.position_id,a.role_name,a.duty,a.entry_person ,a.entry_date,a.sort_id from $[cert].role_base a  where  a.role_id=? order by a.sort_id",new String[]{role_id});

				roleJSON.put("roleId",role_id);
				roleJSON.put("roles",rs[0]);
				roleJSON.put("positionId",rs[1]);
				roleJSON.put("roleName",rs[2]);
				roleJSON.put("duty",rs[3]);

				roleJSON.put("positionArray",positionArray);
				roleJSON.put("roleNameArray",roleNameArray);
				roleJSON.put("entry_person",rs[4]);	
				if(rs[5].equals("")){
					roleJSON.put("entry_date","");				
				}else{
					roleJSON.put("entry_date",rs[5].substring(0,11));
				}
				roleJSON.put("sortId",rs[6]);
				
				Role role = CertManager.getRole(role_id);
                                <?[?>roleJSON.toString()<?]?>;
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			conCert.close(); 
			conPlat.close();
		}
}

	public void doPost(Jacper jacper){

		boolean isLogin = jacper.setSession();
		Param param=new Param(jacper); 
		String type = jacper.getStr("type");

		if(type.equals("save")){
			Role role=CertManager.createRole(param);
		}else if(type.equals("updatesave")){
			String roleId = jacper.getStr("roleId");
			Role role=Role.getRole(roleId);
			role.update(param);
		}else if(type.equals("delete")){
                        String[] arrays = param.getArray("roleId");
                        StringBuilder userRoleSql = new StringBuilder();
                        for(String array : arrays)
                            userRoleSql.append((userRoleSql.length() > 0 ? "," : "(") + "?");
                        if(userRoleSql.length() > 0){
                            userRoleSql.insert(0, "select count(*) from user_base u where u.ROLE_ID in ").append(")");
                            String[] row = param.getConnection("cert").getRow(userRoleSql.toString(), arrays);
                            if(row != null && row.length > 0 && !"0".equals(row[0])){
                                jacper.print("{\"success\":false , \"message\" : \"目前有"+row[0]+"个用户正在使用所选职位，暂时无法删除。\"}");
                                return;
                            }
                        }
			String roleId = jacper.getStr("roleId");
			Role role=Role.getRole(roleId);
			role.delete(param);
		}
		jacper.print("{'success':true}");
		param.closeAllConnection();
	}
}
